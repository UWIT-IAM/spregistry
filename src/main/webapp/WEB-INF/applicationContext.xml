<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <context:annotation-config />
    <bean id="spregPropertiesPlaceholder"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>${spreg.properties.path:/WEB-INF}/spreg.properties</value>
                <value>${spreg.properties.path:/WEB-INF}/spreg-secrets.properties</value>
            </list>
        </property>
    </bean>

    <bean id="sprpManager" init-method="init" destroy-method="cleanup" class="edu.washington.iam.registry.rp.RelyingPartyManagerImpl">
        <property name="metadataDAOs">
            <map>
                <entry key="IC">
                    <bean class="edu.washington.iam.registry.rp.XMLMetadata">
                        <property name="id" value="IC"/>
                        <property name="description" value="InCommon"/>
                        <property name="uri" value="file:${incommon.metadata.path}"/>
                        <property name="editable" value="false"/>
                        <property name="refresh" value="600"/>
                    </bean>
                </entry>
                <entry key="UWfixed">
                    <bean class="edu.washington.iam.registry.rp.XMLMetadata">
                        <property name="id" value="UWfixed"/>
                        <property name="description" value="UW fixed non-federation peers"/>
                        <property name="uri" value="file:${uw.metadata.path}/"/>
                        <property name="editable" value="false"/>
                    </bean>
                </entry>
                <entry key="UW">
                    <bean class="edu.washington.iam.registry.rp.DBMetadata">
                        <property name="id" value="UW"/>
                        <property name="groupId" value="uwrp" />
                        <property name="editable" value = "true" />
                        <property name="idpHelper" ref = "idpHelper" />
                    </bean>
                </entry>
            </map>
        </property>
        <property name="schemaVerifier" ref="xmlsecVerifier" />
    </bean>

    <bean id="xmlsecVerifier" class="edu.washington.iam.registry.rp.SchemaVerifier">
        <property name="verifyCommand" value="${spreg.root}/xmlsectool/xmlsectool.sh --validateSchema  --schemaDirectory ${spreg.root}/xmlsectool/schema-files --inFile " />
    </bean>


    <bean id="spfpManager" class="edu.washington.iam.registry.filter.FilterPolicyManagerImpl" />

    <bean id="filterPolicyDAO" class="edu.washington.iam.registry.filter.DBFilterPolicyDAO" >
           <property name="idpHelper" ref = "idpHelper" />
    </bean>

    <bean id="attributeDAO"
          class="edu.washington.iam.registry.filter.AttributeDAOXML">
        <property name="attributeUri" value="file:${spreg.root}/attribute.xml" />
        <property name="attributeRefresh" value="600" />
    </bean>

    <bean id="spprManager" class="edu.washington.iam.registry.proxy.ProxyManagerDB">
        <property name="template" ref="jdbcTemplate" />
    </bean>

    <bean id="spacManager" class="edu.washington.iam.registry.accessctrl.AccessCtrlManagerDB">
        <property name="template" ref="jdbcTemplate" />
        <property name="idpHelper" ref = "idpHelper" />
    </bean>

    <bean id="uuidManager" class="edu.washington.iam.registry.rp.UuidManager">
        <property name="template" ref="jdbcTemplate" />
    </bean>

    <bean id="webClient" init-method="init" class="edu.washington.iam.tools.WebClient">
        <property name="certFile" value="${spreg.webclient.certFile}" />
        <property name="keyFile" value="${spreg.webclient.keyFile}" />
        <property name="caFile" value="${spreg.webclient.caFile}" />
    </bean>

    <bean id="netactDnsVerifier" init-method="init" class="edu.washington.iam.tools.netact.NetactDNSVerifier">
        <property name="webClient" ref="webClient"/>
        <property name="hostUrl" value="https://api.tools.s.uw.edu/daw/json/DNS_TOOLS/v2/UWNetidsFromFQDN?fqdn="/>
        <property name="domainUrl" value="https://api.tools.s.uw.edu/daw/json/DNS_TOOLS/v2/UWNetidsFromDomain?domain="/>
    </bean>
    <bean id="gwsDnsVerifier" init-method="init" class="edu.washington.iam.tools.gws.GWSDNSVerifier">
        <property name="webClient" ref="webClient"/>
        <property name="gwsOwnerBase" value="${spreg.gws.baseUrl}${spreg.gws.ownerBase}"/>
    </bean>
    <bean id="comboDnsVerifier" init-method="init" class="edu.washington.iam.tools.ComboDNSVerifier">
        <property name="netVerifier" ref="netactDnsVerifier"/>
        <property name="gwsVerifier" ref="gwsDnsVerifier"/>
    </bean>
    <bean id="gwsGroupManager" init-method="init" class="edu.washington.iam.tools.gws.GWSGroupManager">
        <property name="webClient" ref="webClient"/>
        <property name="gwsBase" value="${spreg.gws.baseUrl}/group/"/>
    </bean>
    <bean id="idpHelper" init-method="init" class="edu.washington.iam.tools.IdpHelper">
        <property name="idpHosts" value="${spreg.idphosts}"/>
        <property name="webClient" ref="webClient"/>
        <property name="refreshUrl" value="https://%s/refresh_uw/"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="postgresDataSource" />
    </bean>

    <bean id="postgresDataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://${spreg.db.url}"/>
        <property name="username" value="${spreg.db.username}"/>
        <property name="password" value="${spreg.db.password}"/>
        <property name="connectionProperties">
            <props>
                <prop key="sslrootcert">${spreg.db.sslrootcert}</prop>
                <prop key="sslcert">${spreg.db.sslcert}</prop>
                <prop key="sslkey">${spreg.db.sslkey}</prop>
                <prop key="sslpassword">${spreg.db.sslpassword}</prop>
            </props>
        </property>
    </bean>

</beans>
